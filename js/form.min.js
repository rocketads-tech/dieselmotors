/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/form.js":
/*!************************!*\
  !*** ./src/js/form.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const form = document.getElementById(\"form\");\r\n  form.addEventListener(\"submit\", formSend);\r\n\r\n  async function formSend(e) {\r\n    e.preventDefault();\r\n\r\n    let error = formValidate(form);\r\n\r\n    let formData = new FormData(form);\r\n\r\n    if (error === 0) {\r\n      form.classList.add(\"_sending\");\r\n      let response = await fetch(\"\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n\t\t\t});\r\n      if (response.ok) {\r\n        let result = await response.json();\r\n        alert(result.message);\r\n        form.reset();\r\n        form.classList.remove(\"_sending\");\r\n      } else {\r\n        alert(\"Ошибка\");\r\n\t\t\t\tform.classList.remove(\"_sending\");\r\n\t\t\t\tform.reset();\r\n      }\r\n    } else {\r\n      alert(\"Заполните обязательные поля\");\r\n    }\r\n  }\r\n\r\n  function formValidate(form) {\r\n    let error = 0;\r\n    let formReq = document.querySelectorAll(\".req\");\r\n\r\n    for (let index = 0; index < formReq.length; index++) {\r\n      const input = formReq[index];\r\n      formRemoveError(input);\r\n\r\n      if (input.classList.contains(\"email\")) {\r\n        if (emailTest(input)) {\r\n          formAddError(input);\r\n          error++;\r\n        }\r\n      } else {\r\n        if (input.value === \"\") {\r\n          formAddError(input);\r\n          error++;\r\n        }\r\n      }\r\n    }\r\n    return error;\r\n  }\r\n  function formAddError(input) {\r\n    input.parentElement.classList.add(\"error\");\r\n    input.classList.add(\"_error\");\r\n  }\r\n  function formRemoveError(input) {\r\n    input.parentElement.classList.remove(\"error\");\r\n    input.classList.remove(\"error\");\r\n  }\r\n  //Функция теста email\r\n  function emailTest(input) {\r\n    return !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(input.value);\r\n  }\r\n\r\n});\r\n\n\n//# sourceURL=webpack://gulp2022/./src/js/form.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/form.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;