/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/cart.js":
/*!************************!*\
  !*** ./src/js/cart.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nif (window.NodeList && !NodeList.prototype.forEach) {\r\n  NodeList.prototype.forEach = function (callback, thisArg) {\r\n    thisArg = thisArg || window;\r\n    for (var i = 0; i < this.length; i++) {\r\n      callback.call(thisArg, this[i], i, this);\r\n    }\r\n  };\r\n}\r\n\r\nconst cartItems = document.querySelectorAll(\"li.cart-item\");\r\nconst totalAmount = document.getElementById(\"totalAmount\");\r\nconst totalNumber = document.getElementById(\"totalNumber\");\r\n\r\nif (cartItems.length > 0) {\r\n  cartItems.forEach((item) => {\r\n    const productCount = item.querySelector(\"#productCount\"),\r\n      minus = item.querySelector(\"#minus\"),\r\n      plus = item.querySelector(\"#plus\"),\r\n      priceNumber = item.querySelector(\".price__number\"),\r\n      amountNumber = item.querySelector(\".item-amount__number\");\r\n\r\n    let count = 0;\r\n    let amountValue = parseInt(totalAmount.innerText);\r\n\r\n    function increaseCount() {\r\n      count++;\r\n      productCount.value = count;\r\n      countAmount();\r\n    }\r\n\r\n    function decreaseCount() {\r\n      if (count > 0) {\r\n        count--;\r\n      }\r\n      productCount.value = count;\r\n      countAmount();\r\n    }\r\n\r\n    function countAmount() {\r\n      const amount = productCount.value * parseInt(priceNumber.innerText);\r\n\r\n      amountNumber.innerText = amount;\r\n      amount === 0 ? (amountNumber.innerText = \"0000\") : false;\r\n      priceNumber.innerText === \"\"\r\n        ? ((priceNumber.innerText = \"0000\"), (amountNumber.innerText = \"0000\"))\r\n        : false;\r\n\r\n      let x = 0;\r\n      let y = 0;\r\n      cartItems.forEach((i) => {\r\n        x = x + parseInt(i.querySelector(\".item-amount__number\").innerText);\r\n        y = y + parseInt(i.querySelector(\"#productCount\").value);\r\n        return x, y;\r\n      });\r\n      totalAmount.innerText = x;\r\n      totalNumber.innerText = y;\r\n    }\r\n\r\n    countAmount();\r\n\r\n    minus.addEventListener(\"click\", () => {\r\n      decreaseCount();\r\n    });\r\n    plus.addEventListener(\"click\", () => {\r\n      increaseCount();\r\n    });\r\n\r\n    productCount.addEventListener(\"input\", () => {\r\n      countAmount();\r\n    });\r\n    const deleteBtn = item.querySelector(\".delete__btn\");\r\n    deleteBtn.addEventListener('click', () => {\r\n      item.remove();\r\n      countAmount();\r\n    })\r\n  });\r\n} else false;\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp2022/./src/js/cart.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/cart.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;